; yield, etc as builtins or keywords?

let std = @import("std")

let fibo = (n: int) -^ ?int -> () {
    let mut a = 0
    let mut b = 1
    ; let mut next: int ; using `next` without initializing result in a panic

    for _ in 0..n {
        yield a
        a, b = b, a + b

        ; next = a + b
        ; a = b
        ; b = next
    }
}

for n in async fibo(10) {
    n |> std.println
}
